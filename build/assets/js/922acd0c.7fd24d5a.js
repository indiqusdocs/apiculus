"use strict";(self.webpackChunkApiculus=self.webpackChunkApiculus||[]).push([[4751],{69914:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var t=n(74848),s=n(28453);const i={sidebar_position:1},r="About Load Balancer Instances",c={id:"ServicesandSystemRequirements/LoadBalancerInstances/About",title:"About Load Balancer Instances",description:"Apiculus Load Balancer Instance Service enables you to create the instances using\xa0NetScaler VPX\xa0as a base image. Using Apiculus Load Balancer Instances, organisations can distribute incoming network traffic across multiple servers or resources to ensure optimal performance, high availability, and scalability of applications and services.",source:"@site/docs/ServicesandSystemRequirements/LoadBalancerInstances/About.md",sourceDirName:"ServicesandSystemRequirements/LoadBalancerInstances",slug:"/ServicesandSystemRequirements/LoadBalancerInstances/About",permalink:"/docs/ServicesandSystemRequirements/LoadBalancerInstances/About",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"sidebar1",previous:{title:"Load Balancer Instances",permalink:"/docs/category/load-balancer-instances"},next:{title:"System Requirements",permalink:"/docs/ServicesandSystemRequirements/LoadBalancerInstances/SystemRequirements"}},o={},d=[];function l(e){const a={a:"a",admonition:"admonition",h1:"h1",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"about-load-balancer-instances",children:"About Load Balancer Instances"})}),"\n",(0,t.jsxs)(a.p,{children:["Apiculus Load Balancer Instance Service enables you to create the instances using\xa0",(0,t.jsx)(a.a,{href:"https://www.netscaler.com/platform/vpx-virtual-machine",children:"NetScaler VPX"}),"\xa0as a base image. Using Apiculus Load Balancer Instances, organisations can distribute incoming network traffic across multiple servers or resources to ensure optimal performance, high availability, and scalability of applications and services."]}),"\n",(0,t.jsx)(a.p,{children:"Load balancer instances are different from VPC-based load balancing. The differences are as specified:"}),"\n",(0,t.jsxs)(a.table,{children:[(0,t.jsx)(a.thead,{children:(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.th,{}),(0,t.jsx)(a.th,{children:"NetScaler-based Load Balancer"}),(0,t.jsx)(a.th,{children:"VPC-based Load Balancer"})]})}),(0,t.jsxs)(a.tbody,{children:[(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Vendor and Technology"}),(0,t.jsx)(a.td,{children:"NetScaler is a load-balancing solution developed by Citrix Systems. It is a hardware-based load balancer with advanced application delivery features, including load balancing, traffic optimization, and security functionalities."}),(0,t.jsx)(a.td,{children:"VPC Load Balancer is a load balancing service Apiculus provides using ACS within their virtual private cloud (VPC) offerings. It is a cloud-based load balancer service that distributes traffic across multiple instances or resources."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Deployment"}),(0,t.jsx)(a.td,{children:"NetScaler is typically deployed as a physical hardware appliance or virtual machine. It requires separate infrastructure and management for its deployment."}),(0,t.jsx)(a.td,{children:"VPC Load Balancer is a service that Apiculus provides within their cloud infrastructure. It is deployed and managed as a cloud service without separate hardware or infrastructure."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Features and Capabilities"}),(0,t.jsx)(a.td,{children:"NetScaler offers various advanced application delivery features, such as SSL offloading, content caching, application firewall, global server load balancing (GSLB), and application acceleration. It provides extensive control and customization options."}),(0,t.jsx)(a.td,{children:"VPC Load Balancer primarily distributes traffic across multiple instances within the cloud environment. It offers essential load-balancing capabilities like round-robin distribution, session persistence, and health checks. However, the feature set may be more limited than Netscaler's advanced functionalities."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Scalability and Integration"}),(0,t.jsx)(a.td,{children:"NetScaler is known for its scalability and high-performance capabilities. It can handle significant traffic and integrate with various applications, services, and infrastructure components."}),(0,t.jsx)(a.td,{children:"VPC Load Balancer is designed to scale seamlessly within the cloud environment. It can automatically adjust capacity based on demand and integrate well with other cloud services provided by the cloud service provider."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Cost and Licensing"}),(0,t.jsx)(a.td,{children:"NetScaler is a commercial load-balancing solution, and licensing costs apply. The pricing model may depend on factors like the number of instances, throughput, or feature set."}),(0,t.jsx)(a.td,{children:"VPC Load Balancer is generally included as part of the cloud service provider's pricing structure for the VPC. The cost is typically based on factors like the number of load balancer instances, data transfer, or usage."})]})]})]}),"\n",(0,t.jsx)(a.admonition,{type:"note",children:(0,t.jsx)(a.p,{children:"The specific capabilities and features of NetScaler-based Load Balancer Instances and VPC Load Balancer may vary based on the vendors' versions, configurations and offerings."})})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>c});var t=n(96540);const s={},i=t.createContext(s);function r(e){const a=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);