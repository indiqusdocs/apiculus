"use strict";(self.webpackChunkApiculus=self.webpackChunkApiculus||[]).push([[809],{83338:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=s(74848),i=s(28453);const o={sidebar_position:32},a="Version 1.13.0.0",r={id:"ReleaseNotes/Ver11300",title:"Version 1.13.0.0",description:"About this Release",source:"@site/docs/ReleaseNotes/Ver11300.md",sourceDirName:"ReleaseNotes",slug:"/ReleaseNotes/Ver11300",permalink:"/docs/ReleaseNotes/Ver11300",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:32,frontMatter:{sidebar_position:32},sidebar:"sidebar4",previous:{title:"Version 1.14.0.0",permalink:"/docs/ReleaseNotes/Ver11400"},next:{title:"Version 1.12.1.0",permalink:"/docs/ReleaseNotes/Ver11210"}},l={},c=[{value:"About this Release",id:"about-this-release",level:2},{value:"Introducing Regions",id:"introducing-regions",level:2},{value:"What Has Changed?",id:"what-has-changed",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"version-11300",children:"Version 1.13.0.0"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Date: 28.07.2021\r\nType: Major\n"})}),"\n",(0,t.jsx)(n.h2,{id:"about-this-release",children:"About this Release"}),"\n",(0,t.jsx)(n.p,{children:"This is a major release with just one feature."}),"\n",(0,t.jsx)(n.h2,{id:"introducing-regions",children:"Introducing Regions"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.apiculus.com",children:"Apiculus\xae"})," now supports multiple geographically spaced out availability regions as part of a single deployment environment. This essentially translates to apiculus\xae being able to talk to multiple Apache CloudStack setups behind the scenes. With this, service providers no longer need to be constrained by a single-orchestrator setup, and can have a much wider outlook while defining their cloud strategy."]}),"\n",(0,t.jsxs)(n.p,{children:["A detailed note on the benefits of this feature can be found here - ",(0,t.jsx)(n.a,{href:"https://www.apiculus.com/blog/manage-geographically-separate-regions-from-a-single-pane-of-glass/",children:"https://www.apiculus.com/blog/manage-geographically-separate-regions-from-a-single-pane-of-glass/"})]}),"\n",(0,t.jsx)(n.h2,{id:"what-has-changed",children:"What Has Changed?"}),"\n",(0,t.jsx)(n.p,{children:"To incorporate Regions, small changes have been done across the system:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"While signing up, subscribers can choose their 'default' region. This will enable them to choose a region that's closer to them."}),"\n",(0,t.jsx)(n.li,{children:"Default regions can also be assigned while creating an account from the administration console."}),"\n",(0,t.jsx)(n.li,{children:"Subscribers will need to 'enable' new regions, which can be done while switching between regions in the marketplace."}),"\n",(0,t.jsx)(n.li,{children:"Region-wise infrastructure utilisation reports can also be seen on the administration console."}),"\n",(0,t.jsx)(n.li,{children:"A lot of other under-the-hood changes have been made for this feature."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(96540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);