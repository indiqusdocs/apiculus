"use strict";(self.webpackChunkApiculus=self.webpackChunkApiculus||[]).push([[5514],{50097:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var t=e(74848),s=e(28453);const a={sidebar_position:3},r="Updating Subscription Charges",c={id:"Administration/BillingandFinancials/UpdatingSubscriptionCharges",title:"Updating Subscription Charges",description:"Apiculus admin console offers an easy means of handling subscription price changes. Admins can update subscription prices after a resource has been created and bring the new prices in effect from the current billing cycle.",source:"@site/docs/Administration/BillingandFinancials/UpdatingSubscriptionCharges.md",sourceDirName:"Administration/BillingandFinancials",slug:"/Administration/BillingandFinancials/UpdatingSubscriptionCharges",permalink:"/docs/Administration/BillingandFinancials/UpdatingSubscriptionCharges",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"sidebar1",previous:{title:"Deactivating a Subscription",permalink:"/docs/Administration/BillingandFinancials/DeactivatingaSubscription"},next:{title:"Adding One-time Charges and Discounts",permalink:"/docs/Administration/BillingandFinancials/AddingOne-timeChargesandDiscounts"}},o={},d=[];function l(n){const i={admonition:"admonition",h1:"h1",header:"header",img:"img",p:"p",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"updating-subscription-charges",children:"Updating Subscription Charges"})}),"\n",(0,t.jsx)(i.p,{children:"Apiculus admin console offers an easy means of handling subscription price changes. Admins can update subscription prices after a resource has been created and bring the new prices in effect from the current billing cycle."}),"\n",(0,t.jsx)(i.p,{children:"Subscription price updates can be done from the subscriptions listing under an account's details or from the global list under Billing and Financials."}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"Updating Subscription Charges",src:e(62071).A+"",width:"2880",height:"1800"})}),"\n",(0,t.jsx)(i.p,{children:"Entering a new price will make the components visible and the distribution of charges across components can de defined.\xa0"}),"\n",(0,t.jsx)(i.admonition,{type:"note",children:(0,t.jsx)(i.p,{children:"The sum of component prices should add up to the total target price."})}),"\n",(0,t.jsx)(i.p,{children:"Once updated, the subscriber will be notified over email (and SMS, if enabled)."})]})}function p(n={}){const{wrapper:i}={...(0,s.R)(),...n.components};return i?(0,t.jsx)(i,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},62071:(n,i,e)=>{e.d(i,{A:()=>t});const t=e.p+"assets/images/UpdatingSubscriptionCharges-4843f9395901ee0b8e872d19ed1b0e1c.png"},28453:(n,i,e)=>{e.d(i,{R:()=>r,x:()=>c});var t=e(96540);const s={},a=t.createContext(s);function r(n){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function c(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(a.Provider,{value:i},n.children)}}}]);